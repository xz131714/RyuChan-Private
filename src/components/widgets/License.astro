---  
import dayjs from "@utils/dayjs";  
import { USER_NAME, DATE_FORMAT, t, umamiConfig } from "@config";  
import type { PostData } from "@interfaces/data";  
import { Icon } from "astro-icon/components";  
import PostFilter from "./PostFilter.astro";  
  
const { title, url, pubDate, badge, categories = [], tags = [], word, time } = Astro.props as PostData;  
const displayDate = pubDate ? dayjs(pubDate).format(DATE_FORMAT) : "";  
  
// 从 URL 中提取 slug  
const slug = url ? url.toString().split('/').filter(Boolean).pop() : undefined;  
  
const socialLinks = [  
  {  
    name: "X (Twitter)",  
    icon: "ri:twitter-x-line",  
    class: "bg-black hover:bg-gray-800",  
    url: `https://twitter.com/intent/tweet/?text=${title}&url=${url}`,  
  },  
  {  
    name: "Telegram",  
    icon: "ri:telegram-line",  
    class: "bg-[#26a5e4] hover:bg-[#1e96d1]",  
    url: `https://telegram.me/share/url?text=${title}&url=${url}`,  
  },
  {  
    name: "Reddit",  
    icon: "ri:reddit-line",  
    class: "bg-[#ff4500] hover:bg-[#e63e00]",  
    url: `https://reddit.com/submit/?url=${url}&title=${title}`,  
  },  
  {  
    name: "Facebook",  
    icon: "ri:facebook-circle-line",  
    class: "bg-[#0866ff] hover:bg-[#0755d6]",  
    url: `https://facebook.com/sharer/sharer.php?u=${url}`,  
  },  
  {  
    name: "Email",  
    icon: "ri:mail-line",  
    class: "bg-gray-600 hover:bg-gray-700",  
    url: `mailto:?subject=${title}&body=${url}`,  
  },  
];  
---  
  
<hr />  
<div class="container p-0">  
  <div class="text-right text-sm text-base-content/60 italic mb-2">  
    <Icon name="ri:heart-line" class="w-4 h-4 inline-block align-text-bottom text-error" /> Thanks for reading!  
  </div>  
  
  <div class="card bg-base-200 overflow-visible">  
    <div class="card-body relative p-4 sm:p-6 lg:p-8">  
      <!-- License Icon -->  
      <div class="absolute -top-8 left-8">  
        <div class="w-16 h-16 bg-primary rounded-full flex items-center justify-center shadow-lg">  
          <Icon name="ri:creative-commons-line" class="w-10 h-10 text-primary-content" />  
        </div>  
      </div>  
  
      <!-- Article Metadata -->  
      <div class="space-y-4">  
        <h3 class="text-lg sm:text-xl lg:text-2xl font-bold">{title}</h3>  
  
        <!-- Stats Row -->  
        <div class="flex flex-wrap gap-2 sm:gap-4 text-xs sm:text-sm opacity-75">  
          {  
            displayDate && (  
              <span class="flex items-center gap-1">  
                <Icon name="lucide:calendar" class="h-4 w-4" />  
                {displayDate}  
              </span>  
            )  
          }  
  
          {  
            badge && (  
              <span class="flex items-center gap-1">  
                <Icon name="lucide:bookmark" class="h-4 w-4" />  
                {badge}  
              </span>  
            )  
          }  
  
          {  
            word && time && (  
              <div class="flex items-center gap-1">  
                <Icon name="lucide:book-open" class="h-4 w-4" />  
                <span>  
                  {word} {t("label.wordCount")} · {time} {t("label.readTime")}  
                </span>  
              </div>  
            )  
          }  
  
          <!-- 添加浏览量显示 -->  
          {  
            slug && (  
              <div class="flex items-center gap-1">  
                <Icon name="lucide:eye" class="h-4 w-4" />  
                <span id="license-page-views">加载中...</span>  
              </div>  
            )  
          }  
  
          <a href={url} class="flex items-center gap-1 hover:text-primary transition-colors">  
            <Icon name="ri:links-line" class="w-4 h-4" />  
          </a>  
        </div>  
  
        <!-- Categories and Tags -->  
        <div class="mt-4">  
          <PostFilter categories={categories} tags={tags} />  
          <!-- License Info -->  
          <hr class="my-4" />  
          <div class="flex justify-between items-center flex-wrap gap-4">  
            <div class="text-sm opacity-75">  
              © {USER_NAME} |  
              <a  
                href="https://creativecommons.org/licenses/by-nc-sa/4.0/deed"  
                target="_blank"  
                rel="noopener noreferrer"  
                class="hover:text-primary transition-colors"  
              >  
                CC BY-NC-SA 4.0  
              </a>  
            </div>  
            <!-- Share Button -->  
            <button class="btn btn-primary btn-outline" onclick="share_modal.showModal()">  
              {t("label.share")}  
              <Icon name="ri:share-line" class="w-5 h-5" />  
            </button>  
          </div>  
        </div>  
      </div>  
    </div>  
  </div>  
  
  <!-- Share Modal -->  
  <dialog id="share_modal" class="modal modal-bottom sm:modal-middle">  
    <div class="modal-box max-w-2xl rounded-none sm:rounded-xl">  
      <h3 class="font-bold text-lg sm:text-xl mb-6 text-center">  
        {t("label.shareCard")}  
      </h3>  
      <div class="flex flex-wrap gap-4 justify-center">  
        {  
          socialLinks.map(({ name, icon, class: bgClass, url }) => (  
            <a  
              href={url}  
              class={`btn btn-circle btn-lg transition-transform hover:scale-110 ${bgClass}`}  
              target="_blank"  
              rel="noopener noreferrer"  
              title={name}  
            >  
              <span class="sr-only">{name}</span>  
              <Icon name={icon} class="w-6 h-6 text-white" />  
            </a>  
          ))  
        }  
      </div>  
      <div class="modal-action">  
        <form method="dialog">  
          <button class="btn btn-ghost hover:scale-105 transition-transform">  
            {t("label.close")}  
          </button>  
        </form>  
      </div>  
    </div>  
    <form method="dialog" class="modal-backdrop">  
      <button>{t("label.close")}</button>  
    </form>  
  </dialog>  
</div>  
  
{slug && (  
  <script define:vars={{ slug, umamiConfig }}>  
    // 获取浏览量统计  
    async function fetchLicensePageViews() {  
      if (!umamiConfig.enable) {  
        return;  
      }  
        
      try {  
        // 第一步：获取网站ID和token  
        const shareResponse = await fetch(`${umamiConfig.baseUrl}/api/share/${umamiConfig.shareId}`);  
        if (!shareResponse.ok) {  
          throw new Error('获取分享信息失败');  
        }  
        const shareData = await shareResponse.json();  
        const { websiteId, token } = shareData;  
          
        // 第二步：获取统计数据  
        const currentTimestamp = Date.now();  
        const statsUrl = `${umamiConfig.baseUrl}/api/websites/${websiteId}/stats?startAt=0&endAt=${currentTimestamp}&unit=hour&timezone=${encodeURIComponent(umamiConfig.timezone)}&url=%2Fblog%2F${slug}&compare=false`;  
          
        const statsResponse = await fetch(statsUrl, {  
          headers: {  
            'x-umami-share-token': token  
          }  
        });  
          
        if (!statsResponse.ok) {  
          throw new Error('获取统计数据失败');  
        }  
          
        const statsData = await statsResponse.json();  
        const pageViews = statsData.pageviews?.value || 0;  
        const visits = statsData.visits?.value || 0;  
          
        const displayElement = document.getElementById('license-page-views');  
        if (displayElement) {  
          displayElement.textContent = `浏览量 ${pageViews} · 访问数 ${visits}`;  
        }  
      } catch (error) {  
        console.error('Error fetching page views for license:', error);  
        const displayElement = document.getElementById('license-page-views');  
        if (displayElement) {  
          displayElement.textContent = '统计不可用';  
        }  
      }  
    }  
  
    // 页面加载完成后获取统计数据  
    if (document.readyState === 'loading') {  
      document.addEventListener('DOMContentLoaded', fetchLicensePageViews);  
    } else {  
      fetchLicensePageViews();  
    }  
  </script>  
)}  
  
<style>  
  .modal-backdrop button {  
    cursor: default;  
    width: 100%;  
    height: 100%;  
    opacity: 0;  
  }  
  
  /* Remove underlines from PostFilter buttons */  
  :global(.card-body .btn-category),  
  :global(.card-body .btn-tag) {  
    text-decoration: none;  
  }  
</style>